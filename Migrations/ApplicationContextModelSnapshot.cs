// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test2.Data;

#nullable disable

namespace Test2.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Test2.Models.Backpacks", b =>
                {
                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("CharacterID", "ItemID");

                    b.HasIndex("ItemID");

                    b.ToTable("Backpacks");

                    b.HasData(
                        new
                        {
                            CharacterID = 1,
                            ItemID = 1,
                            Amount = 5
                        },
                        new
                        {
                            CharacterID = 2,
                            ItemID = 2,
                            Amount = 4
                        });
                });

            modelBuilder.Entity("Test2.Models.CharacterTitles", b =>
                {
                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AcquiredAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CharacterID", "TitleId");

                    b.HasIndex("TitleId");

                    b.ToTable("Character_Titles");

                    b.HasData(
                        new
                        {
                            CharacterID = 1,
                            TitleId = 1,
                            AcquiredAt = new DateTime(2024, 6, 21, 16, 7, 3, 537, DateTimeKind.Local).AddTicks(8080)
                        },
                        new
                        {
                            CharacterID = 2,
                            TitleId = 2,
                            AcquiredAt = new DateTime(2024, 6, 21, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("Test2.Models.Characters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentWeight")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaxWeight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrentWeight = 1,
                            FirstName = "John",
                            LastName = "Kowalski",
                            MaxWeight = 2
                        },
                        new
                        {
                            Id = 2,
                            CurrentWeight = 4,
                            FirstName = "Johnio",
                            LastName = "Kowalskievich",
                            MaxWeight = 5
                        });
                });

            modelBuilder.Entity("Test2.Models.Items", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sword",
                            Weight = 3
                        },
                        new
                        {
                            Id = 2,
                            Name = "Shield",
                            Weight = 5
                        });
                });

            modelBuilder.Entity("Test2.Models.Titles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Knight"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Barbarian"
                        });
                });

            modelBuilder.Entity("Test2.Models.Backpacks", b =>
                {
                    b.HasOne("Test2.Models.Characters", "Characters")
                        .WithMany("BackPacks")
                        .HasForeignKey("CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Test2.Models.Items", "Items")
                        .WithMany("BackPacks")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Characters");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Test2.Models.CharacterTitles", b =>
                {
                    b.HasOne("Test2.Models.Characters", "Characters")
                        .WithMany("CharacterTitles")
                        .HasForeignKey("CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Test2.Models.Titles", "Titles")
                        .WithMany("CharacterTitles")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Characters");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("Test2.Models.Characters", b =>
                {
                    b.Navigation("BackPacks");

                    b.Navigation("CharacterTitles");
                });

            modelBuilder.Entity("Test2.Models.Items", b =>
                {
                    b.Navigation("BackPacks");
                });

            modelBuilder.Entity("Test2.Models.Titles", b =>
                {
                    b.Navigation("CharacterTitles");
                });
#pragma warning restore 612, 618
        }
    }
}
